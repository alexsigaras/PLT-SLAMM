Grammar Now

Rule 0     S' -> start
Rule 1     start -> statements
Rule 2     statements -> statement statements
Rule 3     statements -> statement
Rule 4     statement -> expression
Rule 5     statement -> ID ASSIGN expression SEMICOLON
Rule 6     statement -> expression PLUS PLUS SEMICOLON
Rule 7     statement -> expression MINUS MINUS SEMICOLON
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression MULTIPLY expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> expression POW expression
Rule 13    expression -> expression MOD expression
Rule 14    expression -> expression AND expression
Rule 15    expression -> expression OR expression
Rule 16    expression -> expression XOR expression
Rule 17    expression -> expression EQUALS expression
Rule 18    expression -> expression NOT_EQUALS expression
Rule 19    expression -> expression GREATER_THAN expression
Rule 20    expression -> expression LESS_THAN expression
Rule 21    expression -> expression GREATER_THAN_OR_EQUAL expression
Rule 22    expression -> expression LESS_THAN_OR_EQUAL expression
Rule 23    expression -> NOT expression
Rule 24    expression -> TRUE
Rule 25    expression -> FALSE
Rule 26    expression -> MINUS expression
Rule 27    expression -> PLUS expression
Rule 28    expression -> LPAREN expression RPAREN
Rule 29    expression -> SELECTOR LPAREN elements RPAREN
Rule 30    expression -> LSBRACKET elements RSBRACKET
Rule 31    expression -> NUMBER
Rule 32    expression -> ID
Rule 33    expression -> STRING1
Rule 34    expression -> STRING2
Rule 35    statement -> IF expression DO statements elif_blocks END
Rule 36    elif_blocks -> elif_block elif_blocks
Rule 37    elif_blocks -> else_block
Rule 38    elif_blocks -> <empty>
Rule 39    elif_block -> ELIF expression DO statements
Rule 40    else_block -> ELSE statements
Rule 41    statement -> WHILE expression DO statements END
Rule 42    statement -> FOR EACH ID IN element DO statements END
Rule 43    statement -> ID ASSIGN LSBRACKET elements RSBRACKET SEMICOLON
Rule 44    elements -> element COMMA elements
Rule 45    elements -> element
Rule 46    element -> expression
Rule 47    statement -> ID ASSIGN LCBRACKET dictionary_objects RCBRACKET SEMICOLON
Rule 48    dictionary_objects -> dictionary_object COMMA dictionary_objects
Rule 49    dictionary_objects -> dictionary_object
Rule 50    dictionary_object -> key COLON value
Rule 51    key -> STRING1
Rule 52    key -> STRING2
Rule 53    value -> expression
Rule 54    statement -> ID LPAREN expression RPAREN SEMICOLON


# Shift reduce Errors 4
# UPLUS, UMINUS
# LPAREN & SEMICOLON precedence


# def p_statement(t):
#     '''statement :

# Single Statement
#                  | statement_expression
#                  | statement_assign
#                  | statement_increment
#                  | statement_decrement
#                  | statement_list
#                  | statement_dictionary

# Compound Statement
#                  | statement_if
#                  | statement_while
#                  | statement_for
#                  | statement_function

# Unary Expression
#                  | expression_boolean
#                  | expression_number
#                  | expression_id
#                  | expression_string
#                  | expression_list
#                  | expression_parse_text
#                  | expression_group
#                  | expression_uplus
#                  | expression_uminus
#                  | expression_not_op
#                  | expression_string
#                  | expression_string
#                  | expression_string

# Binary Expression
#                  | expression_arithmetic_op
#                  | expression_cond_op