Created by PLY version 3.4 (http://www.dabeaz.com/ply)

Unused terminals:

    WHILE
    FOR
    FOREACH

Grammar

Rule 0     S' -> start
Rule 1     start -> statement
Rule 2     start -> function
Rule 3     function -> ID LPAREN expression RPAREN
Rule 4     statement -> ID ASSIGN expression
Rule 5     statement -> expression EQUALS expression
Rule 6     statement -> IF expression DO expression ELSE expression
Rule 7     statement -> expression
Rule 8     expression -> expression PLUS expression
Rule 9     expression -> expression MINUS expression
Rule 10    expression -> expression MULTIPLY expression
Rule 11    expression -> expression DIVIDE expression
Rule 12    expression -> expression POW expression
Rule 13    expression -> expression MOD expression
Rule 14    expression -> expression AND expression
Rule 15    expression -> expression OR expression
Rule 16    expression -> expression XOR expression
Rule 17    expression -> NOT expression
Rule 18    expression -> TRUE
Rule 19    expression -> FALSE
Rule 20    expression -> MINUS expression
Rule 21    expression -> LPAREN expression RPAREN
Rule 22    expression -> expression COMMA expression
Rule 23    expression -> parse
Rule 24    parse -> SELECTOR LPAREN expression RPAREN
Rule 25    expression -> NUMBER
Rule 26    expression -> ID
Rule 27    expression -> string
Rule 28    string -> STRING1
Rule 29    string -> STRING2
Rule 30    expression -> ID string

Terminals, with rules where they appear

AND                  : 14
ASSIGN               : 4
COMMA                : 22
DIVIDE               : 11
DO                   : 6
ELSE                 : 6
EQUALS               : 5
FALSE                : 19
FOR                  : 
FOREACH              : 
ID                   : 3 4 26 30
IF                   : 6
LPAREN               : 3 21 24
MINUS                : 9 20
MOD                  : 13
MULTIPLY             : 10
NOT                  : 17
NUMBER               : 25
OR                   : 15
PLUS                 : 8
POW                  : 12
RPAREN               : 3 21 24
SELECTOR             : 24
STRING1              : 28
STRING2              : 29
TRUE                 : 18
WHILE                : 
XOR                  : 16
error                : 

Nonterminals, with rules where they appear

expression           : 3 4 5 5 6 6 6 7 8 8 9 9 10 10 11 11 12 12 13 13 14 14 15 15 16 16 17 20 21 22 22 24
function             : 2
parse                : 23
start                : 0
statement            : 1
string               : 27 30

Parsing method: LALR

state 0

    (0) S' -> . start
    (1) start -> . statement
    (2) start -> . function
    (4) statement -> . ID ASSIGN expression
    (5) statement -> . expression EQUALS expression
    (6) statement -> . IF expression DO expression ELSE expression
    (7) statement -> . expression
    (3) function -> . ID LPAREN expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    ID              shift and go to state 13
    IF              shift and go to state 14
    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    function                       shift and go to state 11
    string                         shift and go to state 6
    parse                          shift and go to state 3
    start                          shift and go to state 7
    statement                      shift and go to state 8
    expression                     shift and go to state 17

state 1

    (25) expression -> NUMBER .

    PLUS            reduce using rule 25 (expression -> NUMBER .)
    MINUS           reduce using rule 25 (expression -> NUMBER .)
    MULTIPLY        reduce using rule 25 (expression -> NUMBER .)
    DIVIDE          reduce using rule 25 (expression -> NUMBER .)
    POW             reduce using rule 25 (expression -> NUMBER .)
    MOD             reduce using rule 25 (expression -> NUMBER .)
    AND             reduce using rule 25 (expression -> NUMBER .)
    OR              reduce using rule 25 (expression -> NUMBER .)
    XOR             reduce using rule 25 (expression -> NUMBER .)
    COMMA           reduce using rule 25 (expression -> NUMBER .)
    $end            reduce using rule 25 (expression -> NUMBER .)
    EQUALS          reduce using rule 25 (expression -> NUMBER .)
    RPAREN          reduce using rule 25 (expression -> NUMBER .)
    DO              reduce using rule 25 (expression -> NUMBER .)
    ELSE            reduce using rule 25 (expression -> NUMBER .)


state 2

    (24) parse -> SELECTOR . LPAREN expression RPAREN

    LPAREN          shift and go to state 18


state 3

    (23) expression -> parse .

    PLUS            reduce using rule 23 (expression -> parse .)
    MINUS           reduce using rule 23 (expression -> parse .)
    MULTIPLY        reduce using rule 23 (expression -> parse .)
    DIVIDE          reduce using rule 23 (expression -> parse .)
    POW             reduce using rule 23 (expression -> parse .)
    MOD             reduce using rule 23 (expression -> parse .)
    AND             reduce using rule 23 (expression -> parse .)
    OR              reduce using rule 23 (expression -> parse .)
    XOR             reduce using rule 23 (expression -> parse .)
    COMMA           reduce using rule 23 (expression -> parse .)
    $end            reduce using rule 23 (expression -> parse .)
    EQUALS          reduce using rule 23 (expression -> parse .)
    RPAREN          reduce using rule 23 (expression -> parse .)
    DO              reduce using rule 23 (expression -> parse .)
    ELSE            reduce using rule 23 (expression -> parse .)


state 4

    (18) expression -> TRUE .

    PLUS            reduce using rule 18 (expression -> TRUE .)
    MINUS           reduce using rule 18 (expression -> TRUE .)
    MULTIPLY        reduce using rule 18 (expression -> TRUE .)
    DIVIDE          reduce using rule 18 (expression -> TRUE .)
    POW             reduce using rule 18 (expression -> TRUE .)
    MOD             reduce using rule 18 (expression -> TRUE .)
    AND             reduce using rule 18 (expression -> TRUE .)
    OR              reduce using rule 18 (expression -> TRUE .)
    XOR             reduce using rule 18 (expression -> TRUE .)
    COMMA           reduce using rule 18 (expression -> TRUE .)
    $end            reduce using rule 18 (expression -> TRUE .)
    EQUALS          reduce using rule 18 (expression -> TRUE .)
    RPAREN          reduce using rule 18 (expression -> TRUE .)
    DO              reduce using rule 18 (expression -> TRUE .)
    ELSE            reduce using rule 18 (expression -> TRUE .)


state 5

    (20) expression -> MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 20
    string                         shift and go to state 6

state 6

    (27) expression -> string .

    PLUS            reduce using rule 27 (expression -> string .)
    MINUS           reduce using rule 27 (expression -> string .)
    MULTIPLY        reduce using rule 27 (expression -> string .)
    DIVIDE          reduce using rule 27 (expression -> string .)
    POW             reduce using rule 27 (expression -> string .)
    MOD             reduce using rule 27 (expression -> string .)
    AND             reduce using rule 27 (expression -> string .)
    OR              reduce using rule 27 (expression -> string .)
    XOR             reduce using rule 27 (expression -> string .)
    COMMA           reduce using rule 27 (expression -> string .)
    $end            reduce using rule 27 (expression -> string .)
    EQUALS          reduce using rule 27 (expression -> string .)
    RPAREN          reduce using rule 27 (expression -> string .)
    DO              reduce using rule 27 (expression -> string .)
    ELSE            reduce using rule 27 (expression -> string .)


state 7

    (0) S' -> start .



state 8

    (1) start -> statement .

    $end            reduce using rule 1 (start -> statement .)


state 9

    (29) string -> STRING2 .

    PLUS            reduce using rule 29 (string -> STRING2 .)
    MINUS           reduce using rule 29 (string -> STRING2 .)
    MULTIPLY        reduce using rule 29 (string -> STRING2 .)
    DIVIDE          reduce using rule 29 (string -> STRING2 .)
    POW             reduce using rule 29 (string -> STRING2 .)
    MOD             reduce using rule 29 (string -> STRING2 .)
    AND             reduce using rule 29 (string -> STRING2 .)
    OR              reduce using rule 29 (string -> STRING2 .)
    XOR             reduce using rule 29 (string -> STRING2 .)
    COMMA           reduce using rule 29 (string -> STRING2 .)
    EQUALS          reduce using rule 29 (string -> STRING2 .)
    $end            reduce using rule 29 (string -> STRING2 .)
    RPAREN          reduce using rule 29 (string -> STRING2 .)
    DO              reduce using rule 29 (string -> STRING2 .)
    ELSE            reduce using rule 29 (string -> STRING2 .)


state 10

    (28) string -> STRING1 .

    PLUS            reduce using rule 28 (string -> STRING1 .)
    MINUS           reduce using rule 28 (string -> STRING1 .)
    MULTIPLY        reduce using rule 28 (string -> STRING1 .)
    DIVIDE          reduce using rule 28 (string -> STRING1 .)
    POW             reduce using rule 28 (string -> STRING1 .)
    MOD             reduce using rule 28 (string -> STRING1 .)
    AND             reduce using rule 28 (string -> STRING1 .)
    OR              reduce using rule 28 (string -> STRING1 .)
    XOR             reduce using rule 28 (string -> STRING1 .)
    COMMA           reduce using rule 28 (string -> STRING1 .)
    EQUALS          reduce using rule 28 (string -> STRING1 .)
    $end            reduce using rule 28 (string -> STRING1 .)
    RPAREN          reduce using rule 28 (string -> STRING1 .)
    DO              reduce using rule 28 (string -> STRING1 .)
    ELSE            reduce using rule 28 (string -> STRING1 .)


state 11

    (2) start -> function .

    $end            reduce using rule 2 (start -> function .)


state 12

    (21) expression -> LPAREN . expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 21
    string                         shift and go to state 6

state 13

    (4) statement -> ID . ASSIGN expression
    (3) function -> ID . LPAREN expression RPAREN
    (26) expression -> ID .
    (30) expression -> ID . string
    (28) string -> . STRING1
    (29) string -> . STRING2

    ASSIGN          shift and go to state 23
    LPAREN          shift and go to state 24
    EQUALS          reduce using rule 26 (expression -> ID .)
    PLUS            reduce using rule 26 (expression -> ID .)
    MINUS           reduce using rule 26 (expression -> ID .)
    MULTIPLY        reduce using rule 26 (expression -> ID .)
    DIVIDE          reduce using rule 26 (expression -> ID .)
    POW             reduce using rule 26 (expression -> ID .)
    MOD             reduce using rule 26 (expression -> ID .)
    AND             reduce using rule 26 (expression -> ID .)
    OR              reduce using rule 26 (expression -> ID .)
    XOR             reduce using rule 26 (expression -> ID .)
    COMMA           reduce using rule 26 (expression -> ID .)
    $end            reduce using rule 26 (expression -> ID .)
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    string                         shift and go to state 22

state 14

    (6) statement -> IF . expression DO expression ELSE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 25
    string                         shift and go to state 6

state 15

    (19) expression -> FALSE .

    PLUS            reduce using rule 19 (expression -> FALSE .)
    MINUS           reduce using rule 19 (expression -> FALSE .)
    MULTIPLY        reduce using rule 19 (expression -> FALSE .)
    DIVIDE          reduce using rule 19 (expression -> FALSE .)
    POW             reduce using rule 19 (expression -> FALSE .)
    MOD             reduce using rule 19 (expression -> FALSE .)
    AND             reduce using rule 19 (expression -> FALSE .)
    OR              reduce using rule 19 (expression -> FALSE .)
    XOR             reduce using rule 19 (expression -> FALSE .)
    COMMA           reduce using rule 19 (expression -> FALSE .)
    $end            reduce using rule 19 (expression -> FALSE .)
    EQUALS          reduce using rule 19 (expression -> FALSE .)
    RPAREN          reduce using rule 19 (expression -> FALSE .)
    DO              reduce using rule 19 (expression -> FALSE .)
    ELSE            reduce using rule 19 (expression -> FALSE .)


state 16

    (17) expression -> NOT . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 26
    string                         shift and go to state 6

state 17

    (5) statement -> expression . EQUALS expression
    (7) statement -> expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    EQUALS          shift and go to state 31
    $end            reduce using rule 7 (statement -> expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 18

    (24) parse -> SELECTOR LPAREN . expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 38
    string                         shift and go to state 6

state 19

    (26) expression -> ID .
    (30) expression -> ID . string
    (28) string -> . STRING1
    (29) string -> . STRING2

    PLUS            reduce using rule 26 (expression -> ID .)
    MINUS           reduce using rule 26 (expression -> ID .)
    MULTIPLY        reduce using rule 26 (expression -> ID .)
    DIVIDE          reduce using rule 26 (expression -> ID .)
    POW             reduce using rule 26 (expression -> ID .)
    MOD             reduce using rule 26 (expression -> ID .)
    AND             reduce using rule 26 (expression -> ID .)
    OR              reduce using rule 26 (expression -> ID .)
    XOR             reduce using rule 26 (expression -> ID .)
    COMMA           reduce using rule 26 (expression -> ID .)
    $end            reduce using rule 26 (expression -> ID .)
    EQUALS          reduce using rule 26 (expression -> ID .)
    RPAREN          reduce using rule 26 (expression -> ID .)
    DO              reduce using rule 26 (expression -> ID .)
    ELSE            reduce using rule 26 (expression -> ID .)
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    string                         shift and go to state 22

state 20

    (20) expression -> MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 20 (expression -> MINUS expression .)
    MINUS           reduce using rule 20 (expression -> MINUS expression .)
    MULTIPLY        reduce using rule 20 (expression -> MINUS expression .)
    DIVIDE          reduce using rule 20 (expression -> MINUS expression .)
    MOD             reduce using rule 20 (expression -> MINUS expression .)
    AND             reduce using rule 20 (expression -> MINUS expression .)
    OR              reduce using rule 20 (expression -> MINUS expression .)
    XOR             reduce using rule 20 (expression -> MINUS expression .)
    COMMA           reduce using rule 20 (expression -> MINUS expression .)
    $end            reduce using rule 20 (expression -> MINUS expression .)
    EQUALS          reduce using rule 20 (expression -> MINUS expression .)
    RPAREN          reduce using rule 20 (expression -> MINUS expression .)
    DO              reduce using rule 20 (expression -> MINUS expression .)
    ELSE            reduce using rule 20 (expression -> MINUS expression .)
    POW             shift and go to state 30

  ! POW             [ reduce using rule 20 (expression -> MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MOD             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 21

    (21) expression -> LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    RPAREN          shift and go to state 39
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 22

    (30) expression -> ID string .

    PLUS            reduce using rule 30 (expression -> ID string .)
    MINUS           reduce using rule 30 (expression -> ID string .)
    MULTIPLY        reduce using rule 30 (expression -> ID string .)
    DIVIDE          reduce using rule 30 (expression -> ID string .)
    POW             reduce using rule 30 (expression -> ID string .)
    MOD             reduce using rule 30 (expression -> ID string .)
    AND             reduce using rule 30 (expression -> ID string .)
    OR              reduce using rule 30 (expression -> ID string .)
    XOR             reduce using rule 30 (expression -> ID string .)
    COMMA           reduce using rule 30 (expression -> ID string .)
    $end            reduce using rule 30 (expression -> ID string .)
    EQUALS          reduce using rule 30 (expression -> ID string .)
    RPAREN          reduce using rule 30 (expression -> ID string .)
    DO              reduce using rule 30 (expression -> ID string .)
    ELSE            reduce using rule 30 (expression -> ID string .)


state 23

    (4) statement -> ID ASSIGN . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 40
    string                         shift and go to state 6

state 24

    (3) function -> ID LPAREN . expression RPAREN
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 41
    string                         shift and go to state 6

state 25

    (6) statement -> IF expression . DO expression ELSE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    DO              shift and go to state 42
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 26

    (17) expression -> NOT expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 17 (expression -> NOT expression .)
    EQUALS          reduce using rule 17 (expression -> NOT expression .)
    RPAREN          reduce using rule 17 (expression -> NOT expression .)
    DO              reduce using rule 17 (expression -> NOT expression .)
    ELSE            reduce using rule 17 (expression -> NOT expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35

  ! PLUS            [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MINUS           [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MULTIPLY        [ reduce using rule 17 (expression -> NOT expression .) ]
  ! DIVIDE          [ reduce using rule 17 (expression -> NOT expression .) ]
  ! POW             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! MOD             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! AND             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! OR              [ reduce using rule 17 (expression -> NOT expression .) ]
  ! XOR             [ reduce using rule 17 (expression -> NOT expression .) ]
  ! COMMA           [ reduce using rule 17 (expression -> NOT expression .) ]


state 27

    (14) expression -> expression AND . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 43
    string                         shift and go to state 6

state 28

    (16) expression -> expression XOR . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 44
    string                         shift and go to state 6

state 29

    (11) expression -> expression DIVIDE . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 45
    string                         shift and go to state 6

state 30

    (12) expression -> expression POW . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 46
    string                         shift and go to state 6

state 31

    (5) statement -> expression EQUALS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 47
    string                         shift and go to state 6

state 32

    (15) expression -> expression OR . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 48
    string                         shift and go to state 6

state 33

    (8) expression -> expression PLUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 49
    string                         shift and go to state 6

state 34

    (10) expression -> expression MULTIPLY . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 50
    string                         shift and go to state 6

state 35

    (22) expression -> expression COMMA . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 51
    string                         shift and go to state 6

state 36

    (9) expression -> expression MINUS . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 52
    string                         shift and go to state 6

state 37

    (13) expression -> expression MOD . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 53
    string                         shift and go to state 6

state 38

    (24) parse -> SELECTOR LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    RPAREN          shift and go to state 54
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 39

    (21) expression -> LPAREN expression RPAREN .

    PLUS            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MINUS           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    POW             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    MOD             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    AND             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    OR              reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    XOR             reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    COMMA           reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    $end            reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    EQUALS          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    RPAREN          reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    DO              reduce using rule 21 (expression -> LPAREN expression RPAREN .)
    ELSE            reduce using rule 21 (expression -> LPAREN expression RPAREN .)


state 40

    (4) statement -> ID ASSIGN expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    $end            reduce using rule 4 (statement -> ID ASSIGN expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 41

    (3) function -> ID LPAREN expression . RPAREN
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    RPAREN          shift and go to state 55
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 42

    (6) statement -> IF expression DO . expression ELSE expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 56
    string                         shift and go to state 6

state 43

    (14) expression -> expression AND expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 14 (expression -> expression AND expression .)
    EQUALS          reduce using rule 14 (expression -> expression AND expression .)
    RPAREN          reduce using rule 14 (expression -> expression AND expression .)
    DO              reduce using rule 14 (expression -> expression AND expression .)
    ELSE            reduce using rule 14 (expression -> expression AND expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35

  ! PLUS            [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! MINUS           [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! MULTIPLY        [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! DIVIDE          [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! POW             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! MOD             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! AND             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! OR              [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! XOR             [ reduce using rule 14 (expression -> expression AND expression .) ]
  ! COMMA           [ reduce using rule 14 (expression -> expression AND expression .) ]


state 44

    (16) expression -> expression XOR expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 16 (expression -> expression XOR expression .)
    EQUALS          reduce using rule 16 (expression -> expression XOR expression .)
    RPAREN          reduce using rule 16 (expression -> expression XOR expression .)
    DO              reduce using rule 16 (expression -> expression XOR expression .)
    ELSE            reduce using rule 16 (expression -> expression XOR expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35

  ! PLUS            [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! MINUS           [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! MULTIPLY        [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! DIVIDE          [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! POW             [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! MOD             [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! AND             [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! OR              [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! XOR             [ reduce using rule 16 (expression -> expression XOR expression .) ]
  ! COMMA           [ reduce using rule 16 (expression -> expression XOR expression .) ]


state 45

    (11) expression -> expression DIVIDE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 11 (expression -> expression DIVIDE expression .)
    MINUS           reduce using rule 11 (expression -> expression DIVIDE expression .)
    MULTIPLY        reduce using rule 11 (expression -> expression DIVIDE expression .)
    DIVIDE          reduce using rule 11 (expression -> expression DIVIDE expression .)
    MOD             reduce using rule 11 (expression -> expression DIVIDE expression .)
    AND             reduce using rule 11 (expression -> expression DIVIDE expression .)
    OR              reduce using rule 11 (expression -> expression DIVIDE expression .)
    XOR             reduce using rule 11 (expression -> expression DIVIDE expression .)
    COMMA           reduce using rule 11 (expression -> expression DIVIDE expression .)
    $end            reduce using rule 11 (expression -> expression DIVIDE expression .)
    EQUALS          reduce using rule 11 (expression -> expression DIVIDE expression .)
    RPAREN          reduce using rule 11 (expression -> expression DIVIDE expression .)
    DO              reduce using rule 11 (expression -> expression DIVIDE expression .)
    ELSE            reduce using rule 11 (expression -> expression DIVIDE expression .)
    POW             shift and go to state 30

  ! POW             [ reduce using rule 11 (expression -> expression DIVIDE expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MOD             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 46

    (12) expression -> expression POW expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 12 (expression -> expression POW expression .)
    MINUS           reduce using rule 12 (expression -> expression POW expression .)
    MULTIPLY        reduce using rule 12 (expression -> expression POW expression .)
    DIVIDE          reduce using rule 12 (expression -> expression POW expression .)
    MOD             reduce using rule 12 (expression -> expression POW expression .)
    AND             reduce using rule 12 (expression -> expression POW expression .)
    OR              reduce using rule 12 (expression -> expression POW expression .)
    XOR             reduce using rule 12 (expression -> expression POW expression .)
    COMMA           reduce using rule 12 (expression -> expression POW expression .)
    $end            reduce using rule 12 (expression -> expression POW expression .)
    EQUALS          reduce using rule 12 (expression -> expression POW expression .)
    RPAREN          reduce using rule 12 (expression -> expression POW expression .)
    DO              reduce using rule 12 (expression -> expression POW expression .)
    ELSE            reduce using rule 12 (expression -> expression POW expression .)
    POW             shift and go to state 30

  ! POW             [ reduce using rule 12 (expression -> expression POW expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MOD             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 47

    (5) statement -> expression EQUALS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    $end            reduce using rule 5 (statement -> expression EQUALS expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 48

    (15) expression -> expression OR expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

  ! shift/reduce conflict for PLUS resolved as shift
  ! shift/reduce conflict for MINUS resolved as shift
  ! shift/reduce conflict for MULTIPLY resolved as shift
  ! shift/reduce conflict for DIVIDE resolved as shift
  ! shift/reduce conflict for POW resolved as shift
  ! shift/reduce conflict for MOD resolved as shift
  ! shift/reduce conflict for AND resolved as shift
  ! shift/reduce conflict for OR resolved as shift
  ! shift/reduce conflict for XOR resolved as shift
  ! shift/reduce conflict for COMMA resolved as shift
    $end            reduce using rule 15 (expression -> expression OR expression .)
    EQUALS          reduce using rule 15 (expression -> expression OR expression .)
    RPAREN          reduce using rule 15 (expression -> expression OR expression .)
    DO              reduce using rule 15 (expression -> expression OR expression .)
    ELSE            reduce using rule 15 (expression -> expression OR expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35

  ! PLUS            [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! MINUS           [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! MULTIPLY        [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! DIVIDE          [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! POW             [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! MOD             [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! AND             [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! OR              [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! XOR             [ reduce using rule 15 (expression -> expression OR expression .) ]
  ! COMMA           [ reduce using rule 15 (expression -> expression OR expression .) ]


state 49

    (8) expression -> expression PLUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 8 (expression -> expression PLUS expression .)
    MINUS           reduce using rule 8 (expression -> expression PLUS expression .)
    AND             reduce using rule 8 (expression -> expression PLUS expression .)
    OR              reduce using rule 8 (expression -> expression PLUS expression .)
    XOR             reduce using rule 8 (expression -> expression PLUS expression .)
    COMMA           reduce using rule 8 (expression -> expression PLUS expression .)
    $end            reduce using rule 8 (expression -> expression PLUS expression .)
    EQUALS          reduce using rule 8 (expression -> expression PLUS expression .)
    RPAREN          reduce using rule 8 (expression -> expression PLUS expression .)
    DO              reduce using rule 8 (expression -> expression PLUS expression .)
    ELSE            reduce using rule 8 (expression -> expression PLUS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37

  ! MULTIPLY        [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! DIVIDE          [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! POW             [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! MOD             [ reduce using rule 8 (expression -> expression PLUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 50

    (10) expression -> expression MULTIPLY expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 10 (expression -> expression MULTIPLY expression .)
    MINUS           reduce using rule 10 (expression -> expression MULTIPLY expression .)
    MULTIPLY        reduce using rule 10 (expression -> expression MULTIPLY expression .)
    DIVIDE          reduce using rule 10 (expression -> expression MULTIPLY expression .)
    MOD             reduce using rule 10 (expression -> expression MULTIPLY expression .)
    AND             reduce using rule 10 (expression -> expression MULTIPLY expression .)
    OR              reduce using rule 10 (expression -> expression MULTIPLY expression .)
    XOR             reduce using rule 10 (expression -> expression MULTIPLY expression .)
    COMMA           reduce using rule 10 (expression -> expression MULTIPLY expression .)
    $end            reduce using rule 10 (expression -> expression MULTIPLY expression .)
    EQUALS          reduce using rule 10 (expression -> expression MULTIPLY expression .)
    RPAREN          reduce using rule 10 (expression -> expression MULTIPLY expression .)
    DO              reduce using rule 10 (expression -> expression MULTIPLY expression .)
    ELSE            reduce using rule 10 (expression -> expression MULTIPLY expression .)
    POW             shift and go to state 30

  ! POW             [ reduce using rule 10 (expression -> expression MULTIPLY expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MOD             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 51

    (22) expression -> expression COMMA expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 22 (expression -> expression COMMA expression .)
    MINUS           reduce using rule 22 (expression -> expression COMMA expression .)
    AND             reduce using rule 22 (expression -> expression COMMA expression .)
    OR              reduce using rule 22 (expression -> expression COMMA expression .)
    XOR             reduce using rule 22 (expression -> expression COMMA expression .)
    COMMA           reduce using rule 22 (expression -> expression COMMA expression .)
    $end            reduce using rule 22 (expression -> expression COMMA expression .)
    EQUALS          reduce using rule 22 (expression -> expression COMMA expression .)
    RPAREN          reduce using rule 22 (expression -> expression COMMA expression .)
    DO              reduce using rule 22 (expression -> expression COMMA expression .)
    ELSE            reduce using rule 22 (expression -> expression COMMA expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37

  ! MULTIPLY        [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! DIVIDE          [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! POW             [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! MOD             [ reduce using rule 22 (expression -> expression COMMA expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 52

    (9) expression -> expression MINUS expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 9 (expression -> expression MINUS expression .)
    MINUS           reduce using rule 9 (expression -> expression MINUS expression .)
    AND             reduce using rule 9 (expression -> expression MINUS expression .)
    OR              reduce using rule 9 (expression -> expression MINUS expression .)
    XOR             reduce using rule 9 (expression -> expression MINUS expression .)
    COMMA           reduce using rule 9 (expression -> expression MINUS expression .)
    $end            reduce using rule 9 (expression -> expression MINUS expression .)
    EQUALS          reduce using rule 9 (expression -> expression MINUS expression .)
    RPAREN          reduce using rule 9 (expression -> expression MINUS expression .)
    DO              reduce using rule 9 (expression -> expression MINUS expression .)
    ELSE            reduce using rule 9 (expression -> expression MINUS expression .)
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37

  ! MULTIPLY        [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! DIVIDE          [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! POW             [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! MOD             [ reduce using rule 9 (expression -> expression MINUS expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 53

    (13) expression -> expression MOD expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    PLUS            reduce using rule 13 (expression -> expression MOD expression .)
    MINUS           reduce using rule 13 (expression -> expression MOD expression .)
    MULTIPLY        reduce using rule 13 (expression -> expression MOD expression .)
    DIVIDE          reduce using rule 13 (expression -> expression MOD expression .)
    MOD             reduce using rule 13 (expression -> expression MOD expression .)
    AND             reduce using rule 13 (expression -> expression MOD expression .)
    OR              reduce using rule 13 (expression -> expression MOD expression .)
    XOR             reduce using rule 13 (expression -> expression MOD expression .)
    COMMA           reduce using rule 13 (expression -> expression MOD expression .)
    $end            reduce using rule 13 (expression -> expression MOD expression .)
    EQUALS          reduce using rule 13 (expression -> expression MOD expression .)
    RPAREN          reduce using rule 13 (expression -> expression MOD expression .)
    DO              reduce using rule 13 (expression -> expression MOD expression .)
    ELSE            reduce using rule 13 (expression -> expression MOD expression .)
    POW             shift and go to state 30

  ! POW             [ reduce using rule 13 (expression -> expression MOD expression .) ]
  ! PLUS            [ shift and go to state 33 ]
  ! MINUS           [ shift and go to state 36 ]
  ! MULTIPLY        [ shift and go to state 34 ]
  ! DIVIDE          [ shift and go to state 29 ]
  ! MOD             [ shift and go to state 37 ]
  ! AND             [ shift and go to state 27 ]
  ! OR              [ shift and go to state 32 ]
  ! XOR             [ shift and go to state 28 ]
  ! COMMA           [ shift and go to state 35 ]


state 54

    (24) parse -> SELECTOR LPAREN expression RPAREN .

    PLUS            reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    MINUS           reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    MULTIPLY        reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    DIVIDE          reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    POW             reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    MOD             reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    AND             reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    OR              reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    XOR             reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    COMMA           reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    EQUALS          reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    $end            reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    RPAREN          reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    DO              reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)
    ELSE            reduce using rule 24 (parse -> SELECTOR LPAREN expression RPAREN .)


state 55

    (3) function -> ID LPAREN expression RPAREN .

    $end            reduce using rule 3 (function -> ID LPAREN expression RPAREN .)


state 56

    (6) statement -> IF expression DO expression . ELSE expression
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    ELSE            shift and go to state 57
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35


state 57

    (6) statement -> IF expression DO expression ELSE . expression
    (8) expression -> . expression PLUS expression
    (9) expression -> . expression MINUS expression
    (10) expression -> . expression MULTIPLY expression
    (11) expression -> . expression DIVIDE expression
    (12) expression -> . expression POW expression
    (13) expression -> . expression MOD expression
    (14) expression -> . expression AND expression
    (15) expression -> . expression OR expression
    (16) expression -> . expression XOR expression
    (17) expression -> . NOT expression
    (18) expression -> . TRUE
    (19) expression -> . FALSE
    (20) expression -> . MINUS expression
    (21) expression -> . LPAREN expression RPAREN
    (22) expression -> . expression COMMA expression
    (23) expression -> . parse
    (25) expression -> . NUMBER
    (26) expression -> . ID
    (27) expression -> . string
    (30) expression -> . ID string
    (24) parse -> . SELECTOR LPAREN expression RPAREN
    (28) string -> . STRING1
    (29) string -> . STRING2

    NOT             shift and go to state 16
    TRUE            shift and go to state 4
    FALSE           shift and go to state 15
    MINUS           shift and go to state 5
    LPAREN          shift and go to state 12
    NUMBER          shift and go to state 1
    ID              shift and go to state 19
    SELECTOR        shift and go to state 2
    STRING1         shift and go to state 10
    STRING2         shift and go to state 9

    parse                          shift and go to state 3
    expression                     shift and go to state 58
    string                         shift and go to state 6

state 58

    (6) statement -> IF expression DO expression ELSE expression .
    (8) expression -> expression . PLUS expression
    (9) expression -> expression . MINUS expression
    (10) expression -> expression . MULTIPLY expression
    (11) expression -> expression . DIVIDE expression
    (12) expression -> expression . POW expression
    (13) expression -> expression . MOD expression
    (14) expression -> expression . AND expression
    (15) expression -> expression . OR expression
    (16) expression -> expression . XOR expression
    (22) expression -> expression . COMMA expression

    $end            reduce using rule 6 (statement -> IF expression DO expression ELSE expression .)
    PLUS            shift and go to state 33
    MINUS           shift and go to state 36
    MULTIPLY        shift and go to state 34
    DIVIDE          shift and go to state 29
    POW             shift and go to state 30
    MOD             shift and go to state 37
    AND             shift and go to state 27
    OR              shift and go to state 32
    XOR             shift and go to state 28
    COMMA           shift and go to state 35

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: shift/reduce conflict for PLUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 26 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 26 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 26 resolved as shift
WARNING: shift/reduce conflict for POW in state 26 resolved as shift
WARNING: shift/reduce conflict for MOD in state 26 resolved as shift
WARNING: shift/reduce conflict for AND in state 26 resolved as shift
WARNING: shift/reduce conflict for OR in state 26 resolved as shift
WARNING: shift/reduce conflict for XOR in state 26 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 26 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 43 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 43 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 43 resolved as shift
WARNING: shift/reduce conflict for POW in state 43 resolved as shift
WARNING: shift/reduce conflict for MOD in state 43 resolved as shift
WARNING: shift/reduce conflict for AND in state 43 resolved as shift
WARNING: shift/reduce conflict for OR in state 43 resolved as shift
WARNING: shift/reduce conflict for XOR in state 43 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 43 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 44 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 44 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 44 resolved as shift
WARNING: shift/reduce conflict for POW in state 44 resolved as shift
WARNING: shift/reduce conflict for MOD in state 44 resolved as shift
WARNING: shift/reduce conflict for AND in state 44 resolved as shift
WARNING: shift/reduce conflict for OR in state 44 resolved as shift
WARNING: shift/reduce conflict for XOR in state 44 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 44 resolved as shift
WARNING: shift/reduce conflict for PLUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MINUS in state 48 resolved as shift
WARNING: shift/reduce conflict for MULTIPLY in state 48 resolved as shift
WARNING: shift/reduce conflict for DIVIDE in state 48 resolved as shift
WARNING: shift/reduce conflict for POW in state 48 resolved as shift
WARNING: shift/reduce conflict for MOD in state 48 resolved as shift
WARNING: shift/reduce conflict for AND in state 48 resolved as shift
WARNING: shift/reduce conflict for OR in state 48 resolved as shift
WARNING: shift/reduce conflict for XOR in state 48 resolved as shift
WARNING: shift/reduce conflict for COMMA in state 48 resolved as shift
