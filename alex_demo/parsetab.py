
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\xaeF\x7f>37\x90\xc7\x1f\xf0p\xf3\x1d\xff\xc0*'
    
_lr_action_items = {'DO':([1,2,10,13,14,18,19,30,34,35,36,37,39,40,41,42,43,],[-22,-18,-19,-23,-20,33,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'NUMBER':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'MULTIPLY':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,27,-23,-20,27,27,27,-21,27,27,27,-11,-12,27,27,27,-10,27,-13,27,27,]),'TRUE':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([0,1,2,3,7,8,9,10,11,12,13,14,15,16,18,19,20,21,22,23,24,25,26,27,28,29,30,31,33,34,35,36,37,38,39,40,41,42,43,45,46,47,],[3,-22,-18,3,3,-23,3,-19,3,28,-23,-20,28,3,28,28,3,3,3,3,3,3,3,3,3,3,-21,28,3,28,28,-11,-12,28,28,-8,-10,-9,-13,28,3,28,]),'STRING':([17,],[32,]),'RPAREN':([1,2,10,13,14,15,19,30,32,34,35,36,37,39,40,41,42,43,],[-22,-18,-19,-23,-20,30,-17,-21,44,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'POW':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,23,-23,23,23,23,23,-21,23,23,23,23,23,23,23,23,23,23,23,23,23,]),'PLUS':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,26,-23,-20,26,26,26,-21,26,26,26,-11,-12,26,26,-8,-10,-9,-13,26,26,]),'ASSIGN':([8,],[16,]),'$end':([1,2,4,5,6,8,10,12,13,14,19,30,31,34,35,36,37,38,39,40,41,42,43,44,47,],[-22,-18,0,-1,-2,-23,-19,-7,-23,-20,-17,-21,-4,-14,-16,-11,-12,-5,-15,-8,-10,-9,-13,-3,-6,]),'XOR':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,21,-23,-20,21,21,21,-21,21,21,21,-11,-12,21,21,-8,-10,-9,-13,21,21,]),'DIVIDE':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,22,-23,-20,22,22,22,-21,22,22,22,-11,-12,22,22,22,-10,22,-13,22,22,]),'EQUALS':([1,2,8,10,12,13,14,19,30,34,35,36,37,39,40,41,42,43,],[-22,-18,-23,-19,24,-23,-20,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'ELSE':([1,2,10,13,14,19,30,34,35,36,37,39,40,41,42,43,45,],[-22,-18,-19,-23,-20,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,46,]),'LPAREN':([0,3,7,8,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[7,7,7,17,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,]),'ID':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[8,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'IF':([0,],[9,]),'AND':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,20,-23,-20,20,20,20,-21,20,20,20,-11,-12,20,20,-8,-10,-9,-13,20,20,]),'FALSE':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'NOT':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'OR':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,25,-23,-20,25,25,25,-21,25,25,25,-11,-12,25,25,-8,-10,-9,-13,25,25,]),'MOD':([1,2,8,10,12,13,14,15,18,19,30,31,34,35,36,37,38,39,40,41,42,43,45,47,],[-22,-18,-23,-19,29,-23,-20,29,29,29,-21,29,29,29,-11,-12,29,29,29,-10,29,-13,29,29,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[6,]),'start':([0,],[4,]),'expression':([0,3,7,9,11,16,20,21,22,23,24,25,26,27,28,29,33,46,],[12,14,15,18,19,31,34,35,36,37,38,39,40,41,42,43,45,47,]),'statement':([0,],[5,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement','start',1,'p_start','swim.py',124),
  ('start -> function','start',1,'p_start','swim.py',125),
  ('function -> ID LPAREN STRING RPAREN','function',4,'p_function','swim.py',135),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','swim.py',148),
  ('statement -> expression EQUALS expression','statement',3,'p_statement_equals','swim.py',152),
  ('statement -> IF expression DO expression ELSE expression','statement',6,'p_statement_if_else','swim.py',156),
  ('statement -> expression','statement',1,'p_statement_expr','swim.py',161),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','swim.py',165),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','swim.py',166),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','swim.py',167),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','swim.py',168),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','swim.py',169),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','swim.py',170),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','swim.py',171),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','swim.py',172),
  ('expression -> expression XOR expression','expression',3,'p_expression_binop','swim.py',173),
  ('expression -> NOT expression','expression',2,'p_expression_binop','swim.py',174),
  ('expression -> TRUE','expression',1,'p_expression_binop','swim.py',175),
  ('expression -> FALSE','expression',1,'p_expression_binop','swim.py',176),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','swim.py',204),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','swim.py',208),
  ('expression -> NUMBER','expression',1,'p_expression_number','swim.py',212),
  ('expression -> ID','expression',1,'p_expression_name','swim.py',217),
]
