
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '@\x16\xcb\xbbf-C\xb6}?\x80@G|\xbc\xba'
    
_lr_action_items = {'DO':([1,3,4,6,9,10,15,19,20,22,25,26,38,42,43,44,45,47,48,49,50,51,57,],[-24,-22,-18,-26,-28,-27,-19,-25,-20,-29,41,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,-23,]),'NUMBER':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SELECTOR':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MULTIPLY':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,34,-25,-20,34,-29,34,34,-21,34,34,34,34,-11,-12,34,34,34,-10,34,-13,34,-23,34,]),'TRUE':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'MINUS':([0,1,3,4,5,6,9,10,12,13,14,15,16,17,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,38,39,40,41,42,43,44,45,46,47,48,49,50,51,54,56,57,58,],[5,-24,-22,-18,5,-26,-28,-27,5,-25,5,-19,5,35,-25,-20,35,-29,5,5,35,35,5,5,5,5,5,5,5,5,5,5,-21,35,35,5,35,35,-11,-12,35,35,-8,-10,-9,-13,35,5,-23,35,]),'RPAREN':([1,3,4,6,9,10,15,19,20,21,22,26,38,40,42,43,44,45,47,48,49,50,51,55,57,],[-24,-22,-18,-26,-28,-27,-19,-25,-20,38,-29,-17,-21,53,-14,-16,-11,-12,-15,-8,-10,-9,-13,57,-23,]),'POW':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,30,-25,30,30,-29,30,30,-21,30,30,30,30,30,30,30,30,30,30,30,30,30,-23,30,]),'PLUS':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,33,-25,-20,33,-29,33,33,-21,33,33,33,33,-11,-12,33,33,-8,-10,-9,-13,33,-23,33,]),'COMMA':([9,10,37,],[-28,-27,52,]),'STRING2':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,41,52,56,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ASSIGN':([13,],[23,]),'STRING1':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,41,52,56,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'XOR':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,28,-25,-20,28,-29,28,28,-21,28,28,28,28,-11,-12,28,28,-8,-10,-9,-13,28,-23,28,]),'DIVIDE':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,29,-25,-20,29,-29,29,29,-21,29,29,29,29,-11,-12,29,29,29,-10,29,-13,29,-23,29,]),'EQUALS':([1,3,4,6,9,10,13,15,17,19,20,22,26,38,42,43,44,45,47,48,49,50,51,57,],[-24,-22,-18,-26,-28,-27,-25,-19,31,-25,-20,-29,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,-23,]),'ELSE':([1,3,4,6,9,10,15,19,20,22,26,38,42,43,44,45,47,48,49,50,51,54,57,],[-24,-22,-18,-26,-28,-27,-19,-25,-20,-29,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,56,-23,]),'LPAREN':([0,2,5,12,13,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[12,18,12,12,24,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ID':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[13,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'IF':([0,],[14,]),'AND':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,27,-25,-20,27,-29,27,27,-21,27,27,27,27,-11,-12,27,27,-8,-10,-9,-13,27,-23,27,]),'FALSE':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NOT':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,3,4,6,7,8,9,10,11,13,15,17,19,20,22,26,38,39,42,43,44,45,46,47,48,49,50,51,53,57,58,],[-24,-22,-18,-26,0,-1,-28,-27,-2,-25,-19,-7,-25,-20,-29,-17,-21,-4,-14,-16,-11,-12,-5,-15,-8,-10,-9,-13,-3,-23,-6,]),'OR':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,32,-25,-20,32,-29,32,32,-21,32,32,32,32,-11,-12,32,32,-8,-10,-9,-13,32,-23,32,]),'MOD':([1,3,4,6,9,10,13,15,17,19,20,21,22,25,26,38,39,40,42,43,44,45,46,47,48,49,50,51,54,57,58,],[-24,-22,-18,-26,-28,-27,-25,-19,36,-25,-20,36,-29,36,36,-21,36,36,36,36,-11,-12,36,36,36,-10,36,-13,36,-23,36,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[11,]),'string':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,41,52,56,],[6,6,6,22,6,6,37,22,6,6,6,6,6,6,6,6,6,6,6,6,6,55,6,]),'parse':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'start':([0,],[7,]),'statement':([0,],[8,]),'expression':([0,5,12,14,16,23,24,27,28,29,30,31,32,33,34,35,36,41,56,],[17,20,21,25,26,39,40,42,43,44,45,46,47,48,49,50,51,54,58,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement','start',1,'p_start','swim.py',126),
  ('start -> function','start',1,'p_start','swim.py',127),
  ('function -> ID LPAREN expression RPAREN','function',4,'p_function','swim.py',137),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','swim.py',164),
  ('statement -> expression EQUALS expression','statement',3,'p_statement_equals','swim.py',168),
  ('statement -> IF expression DO expression ELSE expression','statement',6,'p_statement_if_else','swim.py',172),
  ('statement -> expression','statement',1,'p_statement_expr','swim.py',177),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','swim.py',181),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','swim.py',182),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','swim.py',183),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','swim.py',184),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','swim.py',185),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','swim.py',186),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','swim.py',187),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','swim.py',188),
  ('expression -> expression XOR expression','expression',3,'p_expression_binop','swim.py',189),
  ('expression -> NOT expression','expression',2,'p_expression_binop','swim.py',190),
  ('expression -> TRUE','expression',1,'p_expression_binop','swim.py',191),
  ('expression -> FALSE','expression',1,'p_expression_binop','swim.py',192),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','swim.py',220),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','swim.py',224),
  ('expression -> parse','expression',1,'p_expression_parse','swim.py',227),
  ('parse -> SELECTOR LPAREN string COMMA string RPAREN','parse',6,'p_expression_parse_text','swim.py',231),
  ('expression -> NUMBER','expression',1,'p_expression_number','swim.py',236),
  ('expression -> ID','expression',1,'p_expression_name','swim.py',241),
  ('expression -> string','expression',1,'p_expression_string','swim.py',248),
  ('string -> STRING1','string',1,'p_expression_string_twoways','swim.py',255),
  ('string -> STRING2','string',1,'p_expression_string_twoways','swim.py',256),
  ('expression -> ID string','expression',2,'p_expression_unistring','swim.py',263),
]
