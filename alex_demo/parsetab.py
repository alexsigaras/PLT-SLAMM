
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x8f\xf0\xa3\xb4TR=\xf0\x15\xa7\x0cF\x00\xf7\xb6\xdd'
    
_lr_action_items = {'DO':([1,3,4,6,9,10,11,15,19,20,22,25,26,39,43,44,45,46,48,49,50,51,52,53,54,55,],[-25,-22,-17,-27,-29,-28,-23,-18,-26,-19,-30,42,-16,-20,-13,-15,-10,-11,-14,-7,-9,-21,-8,-12,-24,-2,]),'NUMBER':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'SELECTOR':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MULTIPLY':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,34,-26,-19,34,-30,34,34,34,-20,34,34,34,34,-10,-11,34,34,34,-9,34,34,-12,-24,-2,34,34,]),'TRUE':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'MINUS':([0,1,3,4,5,6,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,],[5,-25,-22,-17,5,-27,-29,-28,-23,5,-26,5,-18,5,36,5,-26,-19,36,-30,5,5,36,36,5,5,5,5,5,5,5,5,5,5,5,36,-20,36,36,5,36,36,-10,-11,36,36,-7,-9,-21,-8,-12,-24,-2,36,5,36,]),'RPAREN':([1,3,4,6,9,10,11,15,19,20,21,22,26,38,39,41,43,44,45,46,48,49,50,51,52,53,54,55,],[-25,-22,-17,-27,-29,-28,-23,-18,-26,-19,39,-30,-16,54,-20,55,-13,-15,-10,-11,-14,-7,-9,-21,-8,-12,-24,-2,]),'POW':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,30,-26,30,30,-30,30,30,30,-20,30,30,30,30,30,30,30,30,30,30,30,30,30,-24,-2,30,30,]),'PLUS':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,33,-26,-19,33,-30,33,33,33,-20,33,33,33,33,-10,-11,33,33,-7,-9,-21,-8,-12,-24,-2,33,33,]),'COMMA':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,35,-26,-19,35,-30,35,35,35,-20,35,35,35,35,-10,-11,35,35,-7,-9,-21,-8,-12,-24,-2,35,35,]),'STRING2':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'ASSIGN':([13,],[23,]),'STRING1':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'XOR':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,28,-26,-19,28,-30,28,28,28,-20,28,28,28,28,-10,-11,28,28,-7,-9,-21,-8,-12,-24,-2,28,28,]),'DIVIDE':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,29,-26,-19,29,-30,29,29,29,-20,29,29,29,29,-10,-11,29,29,29,-9,29,29,-12,-24,-2,29,29,]),'EQUALS':([1,3,4,6,9,10,11,13,15,17,19,20,22,26,39,43,44,45,46,48,49,50,51,52,53,54,55,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,31,-26,-19,-30,-16,-20,-13,-15,-10,-11,-14,-7,-9,-21,-8,-12,-24,-2,]),'ELSE':([1,3,4,6,9,10,11,15,19,20,22,26,39,43,44,45,46,48,49,50,51,52,53,54,55,56,],[-25,-22,-17,-27,-29,-28,-23,-18,-26,-19,-30,-16,-20,-13,-15,-10,-11,-14,-7,-9,-21,-8,-12,-24,-2,57,]),'LPAREN':([0,2,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[12,18,12,12,24,12,12,12,24,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'ID':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[13,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'IF':([0,],[14,]),'AND':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,27,-26,-19,27,-30,27,27,27,-20,27,27,27,27,-10,-11,27,27,-7,-9,-21,-8,-12,-24,-2,27,27,]),'FALSE':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,15,]),'NOT':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,16,]),'$end':([1,3,4,6,7,8,9,10,11,13,15,17,19,20,22,26,39,40,43,44,45,46,47,48,49,50,51,52,53,54,55,58,],[-25,-22,-17,-27,0,-1,-29,-28,-23,-26,-18,-6,-26,-19,-30,-16,-20,-3,-13,-15,-10,-11,-4,-14,-7,-9,-21,-8,-12,-24,-2,-5,]),'OR':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,32,-26,-19,32,-30,32,32,32,-20,32,32,32,32,-10,-11,32,32,-7,-9,-21,-8,-12,-24,-2,32,32,]),'MOD':([1,3,4,6,9,10,11,13,15,17,19,20,21,22,25,26,38,39,40,41,43,44,45,46,47,48,49,50,51,52,53,54,55,56,58,],[-25,-22,-17,-27,-29,-28,-23,-26,-18,37,-26,-19,37,-30,37,37,37,-20,37,37,37,37,-10,-11,37,37,37,-9,37,37,-12,-24,-2,37,37,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'string':([0,5,12,13,14,16,18,19,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[6,6,6,22,6,6,6,22,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,]),'parse':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,3,]),'start':([0,],[7,]),'statement':([0,],[8,]),'expression':([0,5,12,14,16,18,23,24,27,28,29,30,31,32,33,34,35,36,37,42,57,],[17,20,21,25,26,38,40,41,43,44,45,46,47,48,49,50,51,52,53,56,58,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement','start',1,'p_start','swim.py',159),
  ('function -> ID LPAREN expression RPAREN','function',4,'p_function','swim.py',169),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','swim.py',213),
  ('statement -> expression EQUALS expression','statement',3,'p_statement_equals','swim.py',217),
  ('statement -> IF expression DO expression ELSE expression','statement',6,'p_statement_if_else','swim.py',221),
  ('statement -> expression','statement',1,'p_statement_expr','swim.py',227),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','swim.py',231),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','swim.py',232),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','swim.py',233),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','swim.py',234),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','swim.py',235),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','swim.py',236),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','swim.py',237),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','swim.py',238),
  ('expression -> expression XOR expression','expression',3,'p_expression_binop','swim.py',239),
  ('expression -> NOT expression','expression',2,'p_expression_binop','swim.py',240),
  ('expression -> TRUE','expression',1,'p_expression_binop','swim.py',241),
  ('expression -> FALSE','expression',1,'p_expression_binop','swim.py',242),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','swim.py',270),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','swim.py',274),
  ('expression -> expression COMMA expression','expression',3,'p_expression_parameters','swim.py',277),
  ('expression -> parse','expression',1,'p_expression_parse','swim.py',282),
  ('expression -> function','expression',1,'p_expression_function','swim.py',285),
  ('parse -> SELECTOR LPAREN expression RPAREN','parse',4,'p_expression_parse_text','swim.py',291),
  ('expression -> NUMBER','expression',1,'p_expression_number','swim.py',305),
  ('expression -> ID','expression',1,'p_expression_name','swim.py',310),
  ('expression -> string','expression',1,'p_expression_string','swim.py',317),
  ('string -> STRING1','string',1,'p_expression_string_twoways','swim.py',324),
  ('string -> STRING2','string',1,'p_expression_string_twoways','swim.py',325),
  ('expression -> ID string','expression',2,'p_expression_unistring','swim.py',332),
]
