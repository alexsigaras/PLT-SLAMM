
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.2'

_lr_method = 'LALR'

_lr_signature = '\x11NO\xfc\xa8\x86W\xb08c\xe6\x8aPe\x9dI'
    
_lr_action_items = {'DO':([1,2,4,11,14,15,17,20,21,32,36,37,38,39,41,42,43,44,45,],[-22,-18,-24,-19,-23,-20,-25,35,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'NUMBER':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,]),'MULTIPLY':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,29,-23,-20,29,-25,29,29,-21,29,29,29,29,-11,-12,29,29,29,-10,29,-13,29,29,]),'TRUE':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,2,]),'MINUS':([0,1,2,3,4,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,],[3,-22,-18,3,-24,3,-23,3,-19,3,30,-23,-20,30,-25,3,3,30,30,3,3,3,3,3,3,3,3,3,3,-21,30,30,3,30,30,-11,-12,30,30,-8,-10,-9,-13,30,3,30,]),'STRING':([0,3,8,9,10,12,14,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[4,4,4,17,4,4,17,4,4,4,4,4,4,4,4,4,4,4,4,4,4,]),'RPAREN':([1,2,4,11,14,15,16,17,21,32,34,36,37,38,39,41,42,43,44,45,],[-22,-18,-24,-19,-23,-20,32,-25,-17,-21,46,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'POW':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,25,-23,25,25,-25,25,25,-21,25,25,25,25,25,25,25,25,25,25,25,25,25,25,]),'PLUS':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,28,-23,-20,28,-25,28,28,-21,28,28,28,28,-11,-12,28,28,-8,-10,-9,-13,28,28,]),'ASSIGN':([9,],[18,]),'$end':([1,2,4,5,6,7,9,11,13,14,15,17,21,32,33,36,37,38,39,40,41,42,43,44,45,46,49,],[-22,-18,-24,0,-1,-2,-23,-19,-7,-23,-20,-25,-17,-21,-4,-14,-16,-11,-12,-5,-15,-8,-10,-9,-13,-3,-6,]),'XOR':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,23,-23,-20,23,-25,23,23,-21,23,23,23,23,-11,-12,23,23,-8,-10,-9,-13,23,23,]),'DIVIDE':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,24,-23,-20,24,-25,24,24,-21,24,24,24,24,-11,-12,24,24,24,-10,24,-13,24,24,]),'EQUALS':([1,2,4,9,11,13,14,15,17,21,32,36,37,38,39,41,42,43,44,45,],[-22,-18,-24,-23,-19,26,-23,-20,-25,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,]),'ELSE':([1,2,4,11,14,15,17,21,32,36,37,38,39,41,42,43,44,45,47,],[-22,-18,-24,-19,-23,-20,-25,-17,-21,-14,-16,-11,-12,-15,-8,-10,-9,-13,48,]),'LPAREN':([0,3,8,9,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[8,8,8,19,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,]),'ID':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[9,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'IF':([0,],[10,]),'AND':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,22,-23,-20,22,-25,22,22,-21,22,22,22,22,-11,-12,22,22,-8,-10,-9,-13,22,22,]),'FALSE':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'NOT':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,12,]),'OR':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,27,-23,-20,27,-25,27,27,-21,27,27,27,27,-11,-12,27,27,-8,-10,-9,-13,27,27,]),'MOD':([1,2,4,9,11,13,14,15,16,17,20,21,32,33,34,36,37,38,39,40,41,42,43,44,45,47,49,],[-22,-18,-24,-23,-19,31,-23,-20,31,-25,31,31,-21,31,31,31,31,-11,-12,31,31,31,-10,31,-13,31,31,]),}

_lr_action = { }
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = { }
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'function':([0,],[7,]),'start':([0,],[5,]),'expression':([0,3,8,10,12,18,19,22,23,24,25,26,27,28,29,30,31,35,48,],[13,15,16,20,21,33,34,36,37,38,39,40,41,42,43,44,45,47,49,]),'statement':([0,],[6,]),}

_lr_goto = { }
for _k, _v in _lr_goto_items.items():
   for _x,_y in zip(_v[0],_v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = { }
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> start","S'",1,None,None,None),
  ('start -> statement','start',1,'p_start','swim.py',124),
  ('start -> function','start',1,'p_start','swim.py',125),
  ('function -> ID LPAREN expression RPAREN','function',4,'p_function','swim.py',135),
  ('statement -> ID ASSIGN expression','statement',3,'p_statement_assign','swim.py',156),
  ('statement -> expression EQUALS expression','statement',3,'p_statement_equals','swim.py',160),
  ('statement -> IF expression DO expression ELSE expression','statement',6,'p_statement_if_else','swim.py',164),
  ('statement -> expression','statement',1,'p_statement_expr','swim.py',169),
  ('expression -> expression PLUS expression','expression',3,'p_expression_binop','swim.py',173),
  ('expression -> expression MINUS expression','expression',3,'p_expression_binop','swim.py',174),
  ('expression -> expression MULTIPLY expression','expression',3,'p_expression_binop','swim.py',175),
  ('expression -> expression DIVIDE expression','expression',3,'p_expression_binop','swim.py',176),
  ('expression -> expression POW expression','expression',3,'p_expression_binop','swim.py',177),
  ('expression -> expression MOD expression','expression',3,'p_expression_binop','swim.py',178),
  ('expression -> expression AND expression','expression',3,'p_expression_binop','swim.py',179),
  ('expression -> expression OR expression','expression',3,'p_expression_binop','swim.py',180),
  ('expression -> expression XOR expression','expression',3,'p_expression_binop','swim.py',181),
  ('expression -> NOT expression','expression',2,'p_expression_binop','swim.py',182),
  ('expression -> TRUE','expression',1,'p_expression_binop','swim.py',183),
  ('expression -> FALSE','expression',1,'p_expression_binop','swim.py',184),
  ('expression -> MINUS expression','expression',2,'p_expression_uminus','swim.py',212),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','swim.py',216),
  ('expression -> NUMBER','expression',1,'p_expression_number','swim.py',220),
  ('expression -> ID','expression',1,'p_expression_name','swim.py',225),
  ('expression -> STRING','expression',1,'p_expression_string','swim.py',232),
  ('expression -> ID STRING','expression',2,'p_expression_unistring','swim.py',239),
]
